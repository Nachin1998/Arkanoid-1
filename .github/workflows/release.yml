# This is a basic workflow to help you get started with Actions
name: Release

on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2.2.0
      with:
        fetch-depth: 0
    
    # Get prev and next tag
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@master"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@master"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    # End
    
    # Builds unity project
    - name: Unity - Builder
      uses: webbertakken/unity-builder@v0.15
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        # Version of unity to use for building the project.
        unityVersion: 2019.4.9f1
        # Platform that the build should target.
        targetPlatform:
            - StandaloneWindows64
        # Relative path to the project to be built.
        projectPath: game

    # Make zip file
    - name: Make zip file
      run: zip -r Game-Win64.zip ./build/StandaloneWindows64

    # Release drafter
    - name: Create Release
      id: create_release
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Delete old release asset
    - name: Remove a Release Asset
      uses: flcdrg/remove-release-asset-action@v1.0.4
      with:
        release_id: ${{ steps.create_release.outputs.id }}
        asset_name: Game-Win64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Upload release assets
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Game-Win64.zip
        asset_name: Game-Win64.zip
        asset_content_type: application/zip